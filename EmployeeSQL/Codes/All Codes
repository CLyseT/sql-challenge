TABLES:

CREATE TABLE titles (
	title_id VARCHAR,
	title VARCHAR,
	PRIMARY KEY (title_id)
)
SELECT * FROM titles;

CREATE TABLE departments(
	dept_no VARCHAR,
	dept_name VARCHAR,
	PRIMARY KEY (dept_no)
)
SELECT * FROM departments;

CREATE TABLE total_employees(
    emp_no DEC,
	emp_title_id VARCHAR,
	birth_data DATE,
	first_name VARCHAR,
	last_name VARCHAR,
	sex VARCHAR,
	hire_date DATE,
	PRIMARY KEY (emp_no),
	FOREIGN KEY (emp_title_id) REFERENCES titles (title_id)
)
SELECT * FROM total_employees;

CREATE TABLE dept_employees(
	emp_no DEC,
	dept_no VARCHAR,
	FOREIGN KEY (emp_no) REFERENCES total_employees(emp_no),
	FOREIGN KEY (dept_no) REFERENCES departments(dept_no)
)
SELECT * FROM dept_employees;  

CREATE TABLE dept_managers(
    dept_no VARCHAR,
	emp_no DEC,
	FOREIGN KEY (dept_no) REFERENCES departments(dept_no),
	FOREIGN KEY (emp_no) REFERENCES total_employees(emp_no)
)
SELECT * FROM dept_managers;

CREATE TABLE salaries(
    emp_no DEC,
	salary DEC,
	FOREIGN KEY (emp_no) REFERENCES total_employees(emp_no)
)
SELECT * FROM salaries;


QUESTION 1: 
List the following details of each employee: employee number, last name, first name, sex, and salary

SELECT total_employees.emp_no, total_employees.last_name, total_employees.first_name, total_employees.sex, salaries.salary
FROM salaries
INNER JOIN total_employees ON
total_employees.emp_no=salaries.emp_no


QUESTION 2: 
List first name, last name, and hire date for employees who were hired in 1986.

SELECT first_name, last_name, hire_date
FROM total_employees 
WHERE (hire_date BETWEEN '1986-01-01' AND '1986-12-31');


QUESTION 3: 
List the manager of each department with the following information: department number, department name, the manager's employee number, last name, first name.

SELECT departments.dept_no, departments.dept_name, dept_managers.emp_no, total_employees.last_name, total_employees.first_name
FROM (dept_managers INNER JOIN departments ON departments.dept_no = dept_managers.dept_no)
INNER JOIN total_employees ON total_employees.emp_no = dept_managers.emp_no


QUESTION 4:
List the department of each employee with the following information: employee number, last name, first name, and department name.

SELECT total_employees.emp_no, total_employees.last_name, total_employees.first_name, departments.dept_name
FROM (total_employees INNER JOIN dept_employees ON total_employees.emp_no = dept_employees.emp_no)
INNER JOIN departments ON departments.dept_no = dept_employees.dept_no


QUESTION 5: 
List first name, last name, and sex for employees whose first name is "Hercules" and last names begin with "B."

SELECT total_employees.first_name, total_employees.last_name, total_employees.sex
FROM total_employees 
WHERE first_name = 'Hercules' AND LEFT(last_name,1) = 'B'


QUESTION 6:
List all employees in the Sales department, including their employee number, last name, first name, and department name.

SELECT departments.dept_name, total_employees.emp_no, total_employees.last_name, total_employees.first_name 
FROM (total_employees INNER JOIN dept_employees ON total_employees.emp_no = dept_employees.emp_no)
INNER JOIN departments ON departments.dept_no = dept_employees.dept_no
WHERE dept_name = 'Sales'


OR (Nested WHERE IN method does not allow for all column requests to be seen)

SELECT last_name, first_name, emp_no
FROM total_employees
WHERE emp_no IN
(
SELECT emp_no
FROM dept_employees 
WHERE dept_no IN
(
SELECT dept_no
FROM departments
WHERE dept_name IN
(
SELECT dept_name 
FROM departments
WHERE dept_name = 'Sales'
)
)
);

QUESTION 7:
List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.

SELECT departments.dept_name, total_employees.emp_no, total_employees.last_name, total_employees.first_name 
FROM (total_employees INNER JOIN dept_employees ON total_employees.emp_no = dept_employees.emp_no)
INNER JOIN departments ON departments.dept_no = dept_employees.dept_no
WHERE dept_name = 'Sales' OR dept_name = 'Development'


QUESTION 8: 
In descending order, list the frequency count of employee last names, i.e., how many employees share each last name.

SELECT last_name, COUNT(last_name) AS "name count"
FROM total_employees
GROUP BY last_name
ORDER BY "name count" DESC;

